function revealCircle(a) {
    a.getElementsByClassName("circle")[0].classList.add("opened"), setTimeout(function() {
        document.getElementsByClassName("opened")[0].classList.remove("opened");
    }, 550);
}

function rotateIcon(a) {
    var b = a.getElementsByTagName("svg")[0];
    b.classList.contains("spinLeft") ? (b.classList.toggle("spinLeft", !1), b.classList.toggle("spinRight", !0)) : b.classList.contains("spinRight") ? (b.classList.toggle("spinLeft", !0), 
    b.classList.toggle("spinRight", !1)) : b.classList.toggle("spinLeft");
}

function openDice() {
    toggleHamMenu(), document.getElementById("content").innerHTML = "", loadFile("content", "template/dice.html", 1).then(function(a) {
        Promise.all([ loadFileContents("images/dice/d4.svg"), loadFileContents("images/dice/d6.svg"), loadFileContents("images/dice/d8.svg"), loadFileContents("images/dice/d10.svg"), loadFileContents("images/dice/d12.svg"), loadFileContents("images/dice/d20.svg"), loadFileContents("images/dice/Coin.svg") ]).then(function(a) {
            var b = document.getElementById("dice-holder");
            console.log(a);
            for (var c in a) b.appendChild(convertToElement(a[c]).childNodes[0]);
        });
    });
}

function rollDie(a) {
    var b = Math.floor(Math.random() * a) + 1;
    document.getElementById("result").innerHTML = b;
}

function rollDice() {
    var a = document.getElementById("dice"), b = Math.floor(Math.random() * a.value) + 1;
    document.getElementById("result").innerHTML = b;
}

function coinFlip() {
    var a = Math.floor(2 * Math.random()) + 1;
    document.getElementById("result").innerHTML = 1 == a ? "Heads" : "Tails";
}

function newGame() {
    toggleHamMenu(), openNumPlayerSelect();
}

function openNumPlayerSelect() {
    loadFile("templates", "template/num-player-select.html").then(function(a) {
        var b = document.getElementById("content");
        b.innerHTML = "", newTemplate("num-players-template", [], b);
    }, function(a) {
        console.error("Failed!", a);
    });
}

function enterPlayerNames() {
    var a = document.getElementsByName("player-selection"), b = whichIsChecked(a).value, c = document.getElementById("content");
    c.innerHTML = "", newTemplate("player-names-template", [], c);
    for (var d = document.getElementsByClassName("player-names-input")[0], e = 0; e < b; e++) {
        newTemplate("new-name-template", [], d);
        var f = document.getElementById("player");
        f.setAttribute("name", "player" + e), f.setAttribute("id", "player" + e);
        var g = document.getElementById("playerLabel");
        g.setAttribute("for", "player" + e), g.setAttribute("id", "playerLabel" + e);
    }
}

function openGameSelect() {
    for (var a = document.getElementsByClassName("player-name"), b = [], c = 0; c < a.length; c++) {
        var d = document.getElementById("player" + c).value;
        b[c] = d;
    }
    loadFile("templates", "template/game-select.html").then(function(a) {
        var b = document.getElementById("content");
        b.innerHTML = "", newTemplate("game-selection-template", [], b), loadFileContents("lib/json/game-list.json").then(function(a) {
            for (var b = JSON.parse(a).games, c = document.getElementById("game-selection"), d = 0; d < b.length; d++) {
                newTemplate("game-template", [], c);
                var e = document.getElementById("game-option");
                e.setAttribute("value", b[d].name), e.setAttribute("id", "game-option" + b[d].id);
                var f = document.getElementById("game-option-label");
                f.setAttribute("for", "game-option" + b[d].id), f.setAttribute("id", "game-option-label" + b[d].id), 
                f.innerHTML = b[d].name;
            }
        }, function(a) {
            console.error("Failed to load game-list");
        });
    }, function(a) {
        console.error("Failed to load game-select!", a);
    });
}

function toggleShow(a) {
    document.getElementById(a).classList.toggle("show");
}

function toggleCover(a) {
    document.getElementById(a).classList.toggle("hide");
}

function toggleFabMenu() {
    rotateIcon(document.getElementById("fab")), toggleShow("fab-menu-items"), toggleCover("fab-menu-items-active");
}

function toggleHamMenu() {
    toggleShow("menu"), toggleCover("menu-active");
}

function addPlayer() {
    var a = document.getElementById("name").value, b = document.createElement("p");
    b.setAttribute("class", "player");
    var c = document.createTextNode(a);
    b.appendChild(c), document.getElementById("playerList").appendChild(b);
}

function randPlayer() {
    var a = document.getElementsByClassName("player"), b = a.length, c = Math.floor(Math.random() * b);
    document.getElementById("testArea").innerHTML = a[c].innerHTML;
}

function convertToElement(a) {
    var b = document.createElement("div");
    return b.innerHTML = a, b;
}

function appendChildNodes(a, b) {
    for (;a.firstChild; ) {
        var c = a.firstChild;
        a.removeChild(c), b.appendChild(c);
    }
}

function loadFile(a, b, c) {
    return new Promise(function(d, e) {
        var f = new XMLHttpRequest();
        f.open("GET", b, !0), f.onload = function() {
            200 !== f.status && e(Error(f.statusText));
            var b = document.getElementById(a);
            1 === c ? b.appendChild(convertToElement(f.response).childNodes[0]) : b.appendChild(convertToElement(f.response)), 
            d(f.response);
        }, f.onerror = function() {
            e(Error("Network Error"));
        }, f.send();
    });
}

function loadFileContents(a) {
    return new Promise(function(b, c) {
        var d = new XMLHttpRequest();
        d.open("GET", a, !0), d.onload = function() {
            200 !== d.status && c(Error(d.statusText)), b(d.response);
        }, d.onerror = function() {
            c(Error("Network Error"));
        }, d.send();
    });
}

function newTemplate(a, b, c) {
    var d = document.getElementById(a).innerHTML, e = convertToElement(d);
    for (var f in b) {
        var g = b[f];
        e.getElementsByClassName(f)[0].innerHTML = g;
    }
    appendChildNodes(e, c);
}

function newTemplateArray(a, b, c) {
    for (var d in b) newTemplate(a, b[d], c);
}

function whichIsChecked(a) {
    for (var b = 0; b < a.length; b++) if (a[b].checked) return a[b];
}

document.addEventListener("DOMContentLoaded", function() {
    openNumPlayerSelect();
});