import React, { Component } from "react";



 // export function RandPlayer(players) {
 //     this.players[Math.floor(Math.random()*players.length)];
// //
// //     // if (players.length > 0) {
// //     //     var pick = Math.floor(Math.random() * players.length);
// //     //     alert('Player', players[pick].value, 'anounce', 5000);
// //     // }
// //     // else {
// //     //     alert('Error', 'At least one player must be selected.', 'error', 3000);
// //     // }
  //  }
//creating array to test random player selection

// Class Name: RandomPlayerSelector
// Class Usage: found in nav bar
// Class Reason: to randomly select a player from a selected group of players

class RandomPlayerSelector extends Component {
    state = {
        // Reason: will list players currently playing
        players: [
            {name: "player 1"},
            {name: "player 2"},
            {name: "player 3"},
            {name: "player 4"}
        ],
        // Reason: holds players who are selected in the state
        selectedPlayers: [],
    }
// Function Name: onChange
// Function Usage: used by checkboxes generated by generatePlayer
// Function Reason: event listener that gets called everytime a checkbox is clicked and update the state based off which players are selected
    onChange(e) {
        //gets current state of players from json
        const selectedPlayers = this.state.selectedPlayers;
        //determines position in array
        let index
        if (e.target.checked) {
            selectedPlayers.push(e.target.value);
        } else {
            index = selectedPlayers.indexOf(+e.target.value);
            selectedPlayers.splice(index, 1)
        }
        this.setState({selectedPlayers: selectedPlayers})
    }
// Function Name: randPlayer
// Function Usage: used on generate button
// Function Reason: calculates random player from players selected and displays chosen player as an alert
    randPlayer = () => {
                // Reason:
        const thisPlayer = this.state.selectedPlayers[Math.floor(Math.random() * this.state.selectedPlayers.length)]
        return(
        alert(thisPlayer)
        )
    }
    // Function Name: onChange
    // Function Usage: used by checkboxes generated by generatePlayer
    // Function Reason:
    generatePlayer = (players) => {
        return(
            <div>
                <label>{players.name}</label>
                <input type="checkbox" id={players.name} value={players.name} onChange={this.onChange.bind(this)}/>
            </div>
        )
    }
    // Function Name: onChange
    // Function Usage: used by checkboxes generated by generatePlayer
    // Function Reason:
    render() {

        // let selection = function (X) {
        //     return <option>{X}</option>
        return(
            <div>
            {/* Function Name: onChange
                Function Usage: used by checkboxes generated by generatePlayer
                Function Reason: */}
                {this.state.players.map(
                        (player, i) =>
                            <this.generatePlayer
                                key={i}
                                name={player.name}/>
                    )}
                    {/*should generate random player and display it*/}
            {/* Function Name: onChange
                Function Usage: used by checkboxes generated by generatePlayer
                Function Reason: */}
                <button onClick={this.randPlayer.bind(this)}>
                    Generate
                </button>
                <div>
                    
                </div>

            </div>

        )
    }
}



export default RandomPlayerSelector;